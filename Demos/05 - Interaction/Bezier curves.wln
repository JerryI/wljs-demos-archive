<|"Notebook" -> <|"Controller" -> "6072a7fb-2d6a-4adf-8bef-6eff202ea9ef", 
   "FocusedCell" -> CoffeeLiqueur`Notebook`Cells`CellObj[
     CoffeeLiqueur`Notebook`Cells`CellObj`$3158], 
   "MessangerChannel" -> Messanger, "ModalsChannel" -> 
    "7c322e76-5a50-40a7-b85b-a3c1568eb117", 
   "Objects" -> <|"3c27d476-8451-404e-91b9-f22b333474ed" -> 
      <|"Public" -> Hold[Graphics[{RGBColor[0, 0, 1], 
           {Line[Offload[With[{pc$ = pc$157265, pi$ = pi$157265, 
                pf$ = pf$157265}, {pi$ + 0*(pc$ - pi$), pc$ + 
                 0*(pf$ - pc$)}]]], Line[Offload[With[{pc$ = pc$157265, 
                pi$ = pi$157265, pf$ = pf$157265}, {pi$ + 0.1*(pc$ - pi$), 
                pc$ + 0.1*(pf$ - pc$)}]]], Line[Offload[
              With[{pc$ = pc$157265, pi$ = pi$157265, pf$ = pf$157265}, {
                pi$ + 0.2*(pc$ - pi$), pc$ + 0.2*(pf$ - pc$)}]]], 
            Line[Offload[With[{pc$ = pc$157265, pi$ = pi$157265, 
                pf$ = pf$157265}, {pi$ + 0.30000000000000004*(pc$ - pi$), 
                pc$ + 0.30000000000000004*(pf$ - pc$)}]]], 
            Line[Offload[With[{pc$ = pc$157265, pi$ = pi$157265, 
                pf$ = pf$157265}, {pi$ + 0.4*(pc$ - pi$), pc$ + 
                 0.4*(pf$ - pc$)}]]], Line[Offload[With[{pc$ = pc$157265, 
                pi$ = pi$157265, pf$ = pf$157265}, {pi$ + 0.5*(pc$ - pi$), 
                pc$ + 0.5*(pf$ - pc$)}]]], Line[Offload[
              With[{pc$ = pc$157265, pi$ = pi$157265, pf$ = pf$157265}, {
                pi$ + 0.6000000000000001*(pc$ - pi$), pc$ + 
                 0.6000000000000001*(pf$ - pc$)}]]], 
            Line[Offload[With[{pc$ = pc$157265, pi$ = pi$157265, 
                pf$ = pf$157265}, {pi$ + 0.7000000000000001*(pc$ - pi$), 
                pc$ + 0.7000000000000001*(pf$ - pc$)}]]], 
            Line[Offload[With[{pc$ = pc$157265, pi$ = pi$157265, 
                pf$ = pf$157265}, {pi$ + 0.8*(pc$ - pi$), pc$ + 
                 0.8*(pf$ - pc$)}]]], Line[Offload[With[{pc$ = pc$157265, 
                pi$ = pi$157265, pf$ = pf$157265}, {pi$ + 0.9*(pc$ - pi$), 
                pc$ + 0.9*(pf$ - pc$)}]]], Line[Offload[
              With[{pc$ = pc$157265, pi$ = pi$157265, pf$ = pf$157265}, {
                pi$ + 1*(pc$ - pi$), pc$ + 1*(pf$ - pc$)}]]]}, 
           PointSize[0.06], RGBColor[1, 0, 0], EventListener[
            Point[{0.2, 0.2}], {"drag" -> 
              "49f6097a-8e7d-449f-9991-e5ae5c813d4a"}], EventListener[
            Point[{0.3, 0.5}], {"drag" -> 
              "5cf6262f-1183-4388-99f2-131d3e8f065d"}], EventListener[
            Point[{0.6, 0.1}], {"drag" -> 
              "d1927e61-5b62-4dcc-8fad-95930598b80e"}]}]]|>|>, 
   "Path" -> "/Users/kirill/Github/wljs-demos-archive/Demos/05 - \
Interaction/Bezier curves.wln", "ReadOnly" -> True, 
   "TOC" -> {CoffeeLiqueur`Extensions`TOC`Private`heading[1, "Bezier curves", 
      CoffeeLiqueur`Notebook`Cells`CellObj[
       CoffeeLiqueur`Notebook`Cells`CellObj`$3137]]}|>, 
 "Cells" -> {<|"Data" -> ".md\n# Bezier curves\nAn demo on how to utilize the \
power of WLJS Interpreter", "Display" -> "codemirror", 
    "Hash" -> "58581aa3-12e9-4853-9739-c18a670deb3d", "Invisible" -> False, 
    "MetaOnly" -> False, "Props" -> <|"Hidden" -> True|>, "State" -> "Idle", 
    "Type" -> "Input", "UID" -> Null, "Notebook" -> 
     "704dd5ac-0281-4076-bb57-8901ed49735a"|>, 
   <|"Data" -> 
     "# Bezier curves\nAn demo on how to utilize the power of WLJS \
Interpreter", "Display" -> "markdown", 
    "Hash" -> "3696dbcf-56b6-4616-a434-80c854d5fe51", "Invisible" -> False, 
    "MetaOnly" -> False, "Props" -> <||>, "State" -> "Idle", 
    "Type" -> "Output", "UID" -> Null, "Notebook" -> 
     "704dd5ac-0281-4076-bb57-8901ed49735a"|>, 
   <|"Data" -> ".md\nGenerate intermediate points right on the frontend", 
    "Display" -> "codemirror", "Hash" -> 
     "e157b8f9-fd4b-404f-827b-2afa54eaf05e", "Invisible" -> False, 
    "MetaOnly" -> False, "Props" -> <|"Hidden" -> True|>, "State" -> "Idle", 
    "Type" -> "Input", "UID" -> Null, "Notebook" -> 
     "704dd5ac-0281-4076-bb57-8901ed49735a"|>, 
   <|"Data" -> "Generate intermediate points right on the frontend", 
    "Display" -> "markdown", "Hash" -> 
     "e4a68a9d-0804-48f4-81c2-c81c52c59add", "Invisible" -> False, 
    "MetaOnly" -> False, "Props" -> <||>, "State" -> "Idle", 
    "Type" -> "Output", "UID" -> Null, "Notebook" -> 
     "704dd5ac-0281-4076-bb57-8901ed49735a"|>, 
   <|"Data" -> "autoLine[t_, p1_, p2_, p3_] := \n Line[\n   With[{pc = p2, pi \
= p1, pf = p3}, \n     {pi + t (pc - pi), pc + t (pf - pc)}\n   ] // \
Offload\n ]\n\nSetAttributes[autoLine, HoldRest]", "Display" -> "codemirror", 
    "Hash" -> "01e20445-232d-4f2d-8cd7-10f8f9e6aaf7", "Invisible" -> False, 
    "MetaOnly" -> False, "Props" -> <|"InitGroup" -> True|>, 
    "State" -> "Idle", "Type" -> "Input", "UID" -> Null, 
    "Notebook" -> "704dd5ac-0281-4076-bb57-8901ed49735a"|>, 
   <|"Data" -> ".md\nNow we can plot it with draggable points", 
    "Display" -> "codemirror", "Hash" -> 
     "019fa0e6-7e15-4ae9-a321-fe0cbee79c7f", "Invisible" -> False, 
    "MetaOnly" -> False, "Props" -> <|"Hidden" -> True|>, "State" -> "Idle", 
    "Type" -> "Input", "UID" -> Null, "Notebook" -> 
     "704dd5ac-0281-4076-bb57-8901ed49735a"|>, 
   <|"Data" -> "Now we can plot it with draggable points", 
    "Display" -> "markdown", "Hash" -> 
     "846fdb6b-7961-4dd4-98a2-1b0429209bd7", "Invisible" -> False, 
    "MetaOnly" -> False, "Props" -> <||>, "State" -> "Idle", 
    "Type" -> "Output", "UID" -> Null, "Notebook" -> 
     "704dd5ac-0281-4076-bb57-8901ed49735a"|>, 
   <|"Data" -> "curve[p1_, p2_, p3_] := LeakyModule[{pi = p1, pc = p2, pf = \
p3},\n  {\n    Blue, Table[autoLine[t, pi, pc, pf], {t, 0, 1, 0.1}],\n    \
PointSize[0.06], Red, \n\n    EventHandler[Point[pi], {\"drag\" -> \
Function[xy, pi = xy]}],\n    EventHandler[Point[pc], {\"drag\" -> \
Function[xy, pc = xy]}],\n    EventHandler[Point[pf], {\"drag\" -> \
Function[xy, pf = xy]}]\n  }\n]", "Display" -> "codemirror", 
    "Hash" -> "0140784f-a920-4a24-a052-43b4ca414444", "Invisible" -> False, 
    "MetaOnly" -> False, "Props" -> <|"InitGroup" -> True|>, 
    "State" -> "Idle", "Type" -> "Input", "UID" -> Null, 
    "Notebook" -> "704dd5ac-0281-4076-bb57-8901ed49735a"|>, 
   <|"Data" -> ".md\n__Draw__", "Display" -> "codemirror", 
    "Hash" -> "f82188aa-2191-4535-949a-a2cb948cc2f9", "Invisible" -> False, 
    "MetaOnly" -> False, "Props" -> <|"Hidden" -> True|>, "State" -> "Idle", 
    "Type" -> "Input", "UID" -> Null, "Notebook" -> 
     "704dd5ac-0281-4076-bb57-8901ed49735a"|>, <|"Data" -> "__Draw__", 
    "Display" -> "markdown", "Hash" -> 
     "9de586e2-3cff-4a10-8d1f-9d3437ca0f83", "Invisible" -> False, 
    "MetaOnly" -> False, "Props" -> <||>, "State" -> "Idle", 
    "Type" -> "Output", "UID" -> Null, "Notebook" -> 
     "704dd5ac-0281-4076-bb57-8901ed49735a"|>, 
   <|"Data" -> "curve[{0.2,0.2}, {0.3,0.5}, {0.6,0.1}] // Graphics", 
    "Display" -> "codemirror", "Hash" -> 
     "5663ef45-b76e-4a42-b271-3611336438d4", "Invisible" -> False, 
    "MetaOnly" -> False, "Props" -> <||>, "State" -> "Idle", 
    "Type" -> "Input", "UID" -> Null, "Notebook" -> 
     "704dd5ac-0281-4076-bb57-8901ed49735a"|>, 
   <|"Data" -> "", "Display" -> "codemirror", 
    "Hash" -> "90856bf3-6c6f-41c3-8397-8ca76e05314c", "Invisible" -> False, 
    "MetaOnly" -> False, "Props" -> <||>, "State" -> "Idle", 
    "Type" -> "Input", "UID" -> Null, "Notebook" -> 
     "704dd5ac-0281-4076-bb57-8901ed49735a"|>, 
   <|"Data" -> ".md\nNote, that actual calculation of the intermediate blue \
line happens on frontend's side, i.e. in the browser. Kernel is only updating \
the positions of three points `p1`, `p2`, `p3`.", "Display" -> "codemirror", 
    "Hash" -> "95836fc8-7680-4686-a6e2-4fb24687e151", "Invisible" -> False, 
    "MetaOnly" -> False, "Props" -> <|"Hidden" -> True|>, "State" -> "Idle", 
    "Type" -> "Input", "UID" -> Null, "Notebook" -> 
     "704dd5ac-0281-4076-bb57-8901ed49735a"|>, 
   <|"Data" -> "Note, that actual calculation of the intermediate blue line \
happens on frontend's side, i.e. in the browser. Kernel is only updating the \
positions of three points `p1`, `p2`, `p3`.", "Display" -> "markdown", 
    "Hash" -> "a926c6f8-10fc-4cfd-861a-f387419a9ed1", "Invisible" -> False, 
    "MetaOnly" -> False, "Props" -> <||>, "State" -> "Idle", 
    "Type" -> "Output", "UID" -> Null, "Notebook" -> 
     "704dd5ac-0281-4076-bb57-8901ed49735a"|>, 
   <|"Data" -> " ", "Display" -> "codemirror", 
    "Hash" -> "ca4c0681-ce80-4230-8337-d2cb72fca993", "Invisible" -> False, 
    "MetaOnly" -> False, "Props" -> <||>, "State" -> "Idle", 
    "Type" -> "Input", "UID" -> Null, "Notebook" -> 
     "704dd5ac-0281-4076-bb57-8901ed49735a"|>}, "serializer" -> "jsfn4"|>
