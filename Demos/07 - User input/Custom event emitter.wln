<|"Notebook" -> <|"Controller" -> "3a3f36d1-c784-46ac-bbee-a78512a768e5", 
   "FocusedCell" -> CoffeeLiqueur`Notebook`Cells`CellObj[
     CoffeeLiqueur`Notebook`Cells`CellObj`$3772], 
   "MessangerChannel" -> Messanger, "ModalsChannel" -> 
    "e34975a0-7696-40a1-b812-4275b499e849", "Objects" -> <||>, 
   "Path" -> "/Users/kirill/Github/wljs-demos-archive/Demos/07 - User \
input/Custom event emitter.wln", "ReadOnly" -> True, "Symbols" -> <||>, 
   "TOC" -> {CoffeeLiqueur`Extensions`TOC`Private`heading[2, 
      "Custom event generator", CoffeeLiqueur`Notebook`Cells`CellObj[
       CoffeeLiqueur`Notebook`Cells`CellObj`$3745]], 
     CoffeeLiqueur`Extensions`TOC`Private`heading[2, "Javascript version", 
      CoffeeLiqueur`Notebook`Cells`CellObj[
       CoffeeLiqueur`Notebook`Cells`CellObj`$3747]], 
     CoffeeLiqueur`Extensions`TOC`Private`heading[2, "WLX + JS version", 
      CoffeeLiqueur`Notebook`Cells`CellObj[
       CoffeeLiqueur`Notebook`Cells`CellObj`$3760]]}|>, 
 "Cells" -> {<|"Data" -> ".md\n## Custom event generator\nLet us create a \
custom UI element that can read users input", "Display" -> "codemirror", 
    "Hash" -> "d37fdb09-fd44-4c34-a71b-92f348cbeb06", "Invisible" -> False, 
    "MetaOnly" -> False, "Props" -> <|"Hidden" -> True|>, "State" -> "Idle", 
    "Type" -> "Input", "UID" -> Null, "Notebook" -> 
     "b34df252-dd12-4e2b-b7e0-60c165c948e3"|>, 
   <|"Data" -> "## Custom event generator\nLet us create a custom UI element \
that can read users input", "Display" -> "markdown", 
    "Hash" -> "83750d70-d5f0-4e75-bc50-e54dee2ec37d", "Invisible" -> False, 
    "MetaOnly" -> False, "Props" -> <||>, "State" -> "Idle", 
    "Type" -> "Output", "UID" -> Null, "Notebook" -> 
     "b34df252-dd12-4e2b-b7e0-60c165c948e3"|>, 
   <|"Data" -> ".md\n## Javascript version", "Display" -> "codemirror", 
    "Hash" -> "46b77415-912e-42f8-849a-b33b770c0f07", "Invisible" -> False, 
    "MetaOnly" -> False, "Props" -> <|"Hidden" -> True|>, "State" -> "Idle", 
    "Type" -> "Input", "UID" -> Null, "Notebook" -> 
     "b34df252-dd12-4e2b-b7e0-60c165c948e3"|>, 
   <|"Data" -> "## Javascript version", "Display" -> "markdown", 
    "Hash" -> "977b31ca-ef2f-4838-b024-457b4f22b8bb", "Invisible" -> False, 
    "MetaOnly" -> False, "Props" -> <||>, "State" -> "Idle", 
    "Type" -> "Output", "UID" -> Null, "Notebook" -> 
     "b34df252-dd12-4e2b-b7e0-60c165c948e3"|>, 
   <|"Data" -> ".md\nCustom Button example", "Display" -> "codemirror", 
    "Hash" -> "3303c6c2-cf28-4927-99df-faac485b3596", "Invisible" -> False, 
    "MetaOnly" -> False, "Props" -> <|"Hidden" -> True|>, "State" -> "Idle", 
    "Type" -> "Input", "UID" -> Null, "Notebook" -> 
     "b34df252-dd12-4e2b-b7e0-60c165c948e3"|>, 
   <|"Data" -> "\nCustom Button example", "Display" -> "markdown", 
    "Hash" -> "cd412ca7-2c47-47fb-9d35-eb537d4299ba", "Invisible" -> False, 
    "MetaOnly" -> False, "Props" -> <|"Hidden" -> False|>, "State" -> "Idle", 
    "Type" -> "Output", "UID" -> Null, "Notebook" -> 
     "b34df252-dd12-4e2b-b7e0-60c165c948e3"|>, 
   <|"Data" -> ".js\n\ncore.CustomButtonView = async (args, env) => {\n  \
const options = await core._getRules(args, env);\n  const button = \
document.createElement('input');\n  button.type = \"button\";\n  \
button.classList.add(\"bg-teal-300\", \"hover:bg-teal-400\", \"font-bold\", \
\"py-2\", \"px-4\", \"rounded\");\n  button.value = options.Label;\n  \
button.addEventListener('click', ()=>{\n    \
server.kernel.io.fire(options.Event, \"Clicked!\");\n  });\n\n  \
env.element.appendChild(button);\n}\n\nreturn '';", 
    "Display" -> "codemirror", "Hash" -> 
     "d3783c7a-9a54-47ee-9740-ff03fce60324", "Invisible" -> False, 
    "MetaOnly" -> False, "Props" -> <|"Hidden" -> False|>, "State" -> "Idle", 
    "Type" -> "Input", "UID" -> Null, "Notebook" -> 
     "b34df252-dd12-4e2b-b7e0-60c165c948e3"|>, 
   <|"Data" -> "\ncore.CustomButtonView = async (args, env) => {\n  const \
options = await core._getRules(args, env);\n  const button = \
document.createElement('input');\n  button.type = \"button\";\n  \
button.classList.add(\"bg-teal-300\", \"hover:bg-teal-400\", \"font-bold\", \
\"py-2\", \"px-4\", \"rounded\");\n  button.value = options.Label;\n  \
button.addEventListener('click', ()=>{\n    \
server.kernel.io.fire(options.Event, \"Clicked!\");\n  });\n\n  \
env.element.appendChild(button);\n}\n\nreturn '';", "Display" -> "js", 
    "Hash" -> "5a2e5284-3c60-49aa-9e03-5372f33ad646", "Invisible" -> False, 
    "MetaOnly" -> False, "Props" -> <||>, "State" -> "Idle", 
    "Type" -> "Output", "UID" -> Null, "Notebook" -> 
     "b34df252-dd12-4e2b-b7e0-60c165c948e3"|>, 
   <|"Data" -> ".md\nCapture events on WL Kernel", "Display" -> "codemirror", 
    "Hash" -> "42af3993-43d6-407b-8845-5016af367d70", "Invisible" -> False, 
    "MetaOnly" -> False, "Props" -> <|"Hidden" -> True|>, "State" -> "Idle", 
    "Type" -> "Input", "UID" -> Null, "Notebook" -> 
     "b34df252-dd12-4e2b-b7e0-60c165c948e3"|>, 
   <|"Data" -> "Capture events on WL Kernel", "Display" -> "markdown", 
    "Hash" -> "b447d0b2-dd46-4983-a3e1-b5308786f734", "Invisible" -> False, 
    "MetaOnly" -> False, "Props" -> <||>, "State" -> "Idle", 
    "Type" -> "Output", "UID" -> Null, "Notebook" -> 
     "b34df252-dd12-4e2b-b7e0-60c165c948e3"|>, 
   <|"Data" -> "CustomButton[label_] := With[{uid = CreateUUID[]},\n  \
EventObject[<|\"Id\"->uid, \"Initial\"->False, \
\"View\"->CustomButtonView[\"Label\"->label, \"Event\"->uid]|>]\n]", 
    "Display" -> "codemirror", "Hash" -> 
     "e70a9f43-7f65-4d39-955a-4b452843998b", "Invisible" -> False, 
    "MetaOnly" -> False, "Props" -> <|"Hidden" -> False, "init" -> True|>, 
    "State" -> "Idle", "Type" -> "Input", "UID" -> Null, 
    "Notebook" -> "b34df252-dd12-4e2b-b7e0-60c165c948e3"|>, 
   <|"Data" -> ".md\nUse like a normal `Input-` element", 
    "Display" -> "codemirror", "Hash" -> 
     "3d03a710-2ed3-42a6-8124-88c362b45b9a", "Invisible" -> False, 
    "MetaOnly" -> False, "Props" -> <|"Hidden" -> True|>, "State" -> "Idle", 
    "Type" -> "Input", "UID" -> Null, "Notebook" -> 
     "b34df252-dd12-4e2b-b7e0-60c165c948e3"|>, 
   <|"Data" -> "Use like a normal `Input-` element", "Display" -> "markdown", 
    "Hash" -> "e494e347-0d1c-4534-bc31-471e7b4f6d27", "Invisible" -> False, 
    "MetaOnly" -> False, "Props" -> <||>, "State" -> "Idle", 
    "Type" -> "Output", "UID" -> Null, "Notebook" -> 
     "b34df252-dd12-4e2b-b7e0-60c165c948e3"|>, 
   <|"Data" -> "EventHandler[CustomButton[\"Woo\"], Print]", 
    "Display" -> "codemirror", "Hash" -> 
     "0c761899-75b1-429b-b457-b82ff8608a22", "Invisible" -> False, 
    "MetaOnly" -> False, "Props" -> <|"Hidden" -> False|>, "State" -> "Idle", 
    "Type" -> "Input", "UID" -> Null, "Notebook" -> 
     "b34df252-dd12-4e2b-b7e0-60c165c948e3"|>, 
   <|"Data" -> " ", "Display" -> "codemirror", 
    "Hash" -> "f8cdcabf-ba6e-41be-8610-9bff215edfca", "Invisible" -> False, 
    "MetaOnly" -> False, "Props" -> <||>, "State" -> "Idle", 
    "Type" -> "Input", "UID" -> Null, "Notebook" -> 
     "b34df252-dd12-4e2b-b7e0-60c165c948e3"|>, 
   <|"Data" -> ".md\n## WLX + JS version\nThis way allows to combine power of \
HTML and JS", "Display" -> "codemirror", 
    "Hash" -> "a77d5839-791c-475a-8a92-e9188e2d7f55", "Invisible" -> False, 
    "MetaOnly" -> False, "Props" -> <|"Hidden" -> True|>, "State" -> "Idle", 
    "Type" -> "Input", "UID" -> Null, "Notebook" -> 
     "b34df252-dd12-4e2b-b7e0-60c165c948e3"|>, 
   <|"Data" -> 
     "## WLX + JS version\nThis way allows to combine power of HTML and JS", 
    "Display" -> "markdown", "Hash" -> 
     "6507c160-980e-4d2c-8664-17f1bd10b4a0", "Invisible" -> False, 
    "MetaOnly" -> False, "Props" -> <||>, "State" -> "Idle", 
    "Type" -> "Output", "UID" -> Null, "Notebook" -> 
     "b34df252-dd12-4e2b-b7e0-60c165c948e3"|>, 
   <|"Data" -> ".wlx\n\nMyButton[OptionsPattern[]] := With[{Event = \
OptionValue[\"Event\"], Label = OptionValue[\"Label\"], UId = \
CreateUUID[]},\n<div>\n  <button type=\"button\" id=\"{UId}\" class=\"rounded \
bg-indigo-600 px-2 py-1 text-sm font-semibold shadow-sm hover:bg-indigo-500 \
focus-visible:outline focus-visible:outline-2 focus-visible:outline-offset-2 \
focus-visible:outline-indigo-600\">\n    <Label/>\n  </button>\n  <script \
type=\"module\">\n    const doc = document.getElementById('<UId/>');\n    \
doc.addEventListener('click', ()=>{\n      server.kernel.io.fire('<Event/>', \
true);\n    })\n  </script>\n</div>\n]\n\nOptions[MyButton] = \
{\"Event\"->\"\", \"Label\"->\"Press me\"};", "Display" -> "codemirror", 
    "Hash" -> "5d6298dc-9935-4f3d-bfb2-9444676e2820", "Invisible" -> False, 
    "MetaOnly" -> False, "Props" -> <||>, "State" -> "Idle", 
    "Type" -> "Input", "UID" -> Null, "Notebook" -> 
     "b34df252-dd12-4e2b-b7e0-60c165c948e3"|>, 
   <|"Data" -> ".md\nNow let us make a handy wrapper for it", 
    "Display" -> "codemirror", "Hash" -> 
     "784cc8ce-34aa-4ea3-be70-44f038606a05", "Invisible" -> False, 
    "MetaOnly" -> False, "Props" -> <|"Hidden" -> True|>, "State" -> "Idle", 
    "Type" -> "Input", "UID" -> Null, "Notebook" -> 
     "b34df252-dd12-4e2b-b7e0-60c165c948e3"|>, 
   <|"Data" -> "Now let us make a handy wrapper for it", 
    "Display" -> "markdown", "Hash" -> 
     "62e26cf8-a102-4568-9d6d-ef3d0492b65a", "Invisible" -> False, 
    "MetaOnly" -> False, "Props" -> <||>, "State" -> "Idle", 
    "Type" -> "Output", "UID" -> Null, "Notebook" -> 
     "b34df252-dd12-4e2b-b7e0-60c165c948e3"|>, 
   <|"Data" -> "InputMyButton[opts: OptionsPattern[]] := With[{ev = \
CreateUUID[]},\n  EventObject[<|\"Id\"->ev, \"View\"->HTMLView[MyButton[opts, \
\"Event\"->ev]]|>]\n]", "Display" -> "codemirror", 
    "Hash" -> "011c5461-d5c8-4dfb-93e9-fedb7756054a", "Invisible" -> False, 
    "MetaOnly" -> False, "Props" -> <||>, "State" -> "Idle", 
    "Type" -> "Input", "UID" -> Null, "Notebook" -> 
     "b34df252-dd12-4e2b-b7e0-60c165c948e3"|>, <|"Data" -> ".md\nTest it!", 
    "Display" -> "codemirror", "Hash" -> 
     "ade12f63-7ad5-49b4-838d-b63c2ee2ee35", "Invisible" -> False, 
    "MetaOnly" -> False, "Props" -> <|"Hidden" -> True|>, "State" -> "Idle", 
    "Type" -> "Input", "UID" -> Null, "Notebook" -> 
     "b34df252-dd12-4e2b-b7e0-60c165c948e3"|>, <|"Data" -> "Test it", 
    "Display" -> "markdown", "Hash" -> 
     "97085185-ba47-4748-a8d6-539545d11ec1", "Invisible" -> False, 
    "MetaOnly" -> False, "Props" -> <||>, "State" -> "Idle", 
    "Type" -> "Output", "UID" -> Null, "Notebook" -> 
     "b34df252-dd12-4e2b-b7e0-60c165c948e3"|>, 
   <|"Data" -> "EventHandler[InputMyButton[], Print]", 
    "Display" -> "codemirror", "Hash" -> 
     "b3a13c14-79a4-478c-a7ca-7dfb050ff82e", "Invisible" -> False, 
    "MetaOnly" -> False, "Props" -> <||>, "State" -> "Idle", 
    "Type" -> "Input", "UID" -> Null, "Notebook" -> 
     "b34df252-dd12-4e2b-b7e0-60c165c948e3"|>, 
   <|"Data" -> ".md\nIn principle, one can use just `MyButton` wrapped with \
`WLXEmbed` expression to display a button. Howvever, in this case you would \
have to generate `Event Id` manually and assign all handler to it.", 
    "Display" -> "codemirror", "Hash" -> 
     "b1c93137-3fab-4129-b182-b71cf0545a0a", "Invisible" -> False, 
    "MetaOnly" -> False, "Props" -> <|"Hidden" -> True|>, "State" -> "Idle", 
    "Type" -> "Input", "UID" -> Null, "Notebook" -> 
     "b34df252-dd12-4e2b-b7e0-60c165c948e3"|>, 
   <|"Data" -> "In principle, one can use just `MyButton` wrapped with \
`WLXEmbed` expression to display a button. Howvever, in this case you would \
have to generate `Event Id` manually and assign all handler to it.", 
    "Display" -> "markdown", "Hash" -> 
     "58bb7c55-d1b1-4e4d-a6a9-e838aad5a87d", "Invisible" -> False, 
    "MetaOnly" -> False, "Props" -> <||>, "State" -> "Idle", 
    "Type" -> "Output", "UID" -> Null, "Notebook" -> 
     "b34df252-dd12-4e2b-b7e0-60c165c948e3"|>, <|"Data" -> ".md\nLike this", 
    "Display" -> "codemirror", "Hash" -> 
     "de7c61a8-35ef-4dea-b9b3-bc8baa91959a", "Invisible" -> False, 
    "MetaOnly" -> False, "Props" -> <|"Hidden" -> True|>, "State" -> "Idle", 
    "Type" -> "Input", "UID" -> Null, "Notebook" -> 
     "b34df252-dd12-4e2b-b7e0-60c165c948e3"|>, <|"Data" -> "Like this", 
    "Display" -> "markdown", "Hash" -> 
     "8a17bcbd-3f30-4615-bf29-74756293bbb7", "Invisible" -> False, 
    "MetaOnly" -> False, "Props" -> <||>, "State" -> "Idle", 
    "Type" -> "Output", "UID" -> Null, "Notebook" -> 
     "b34df252-dd12-4e2b-b7e0-60c165c948e3"|>, 
   <|"Data" -> "EventHandler[\"c-ev\", Print];\nMyButton[\"Event\"->\"c-ev\"] \
// HTMLView", "Display" -> "codemirror", 
    "Hash" -> "e9e0ad48-3c9d-4cc0-8390-b5063ad3f8ee", "Invisible" -> False, 
    "MetaOnly" -> False, "Props" -> <||>, "State" -> "Idle", 
    "Type" -> "Input", "UID" -> Null, "Notebook" -> 
     "b34df252-dd12-4e2b-b7e0-60c165c948e3"|>}, "serializer" -> "jsfn4"|>
